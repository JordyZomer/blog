<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on pwning.systems</title>
    <link>https://pwning.systems/posts/</link>
    <description>Recent content in Posts on pwning.systems</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Jordy Zomer</copyright>
    <lastBuildDate>Wed, 31 Mar 2021 18:06:16 +0200</lastBuildDate>
    
	<atom:link href="https://pwning.systems/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Setting Up a Kernel Debugging Environment</title>
      <link>https://pwning.systems/posts/setting-up-a-kernel-debugging-environment/</link>
      <pubDate>Wed, 31 Mar 2021 18:06:16 +0200</pubDate>
      
      <guid>https://pwning.systems/posts/setting-up-a-kernel-debugging-environment/</guid>
      <description>Following up on my first blog post, I&amp;rsquo;ve received a few requests to write about setting up a debugging environment; however, since everybody uses different emulators and so on, I&amp;rsquo;ll mainly focus on which config options are useful!
You must first obtain the kernel sources for your preferred version before you can set up a kernel suitable for debugging. We&amp;rsquo;ll have to decompress it after that.
# use your preferred version $ wget https://git.</description>
    </item>
    
    <item>
      <title>An introduction to Kernel Exploitation Part 1</title>
      <link>https://pwning.systems/posts/an-introduction-to-kernel-exploitation-part1/</link>
      <pubDate>Mon, 08 Mar 2021 18:42:53 +0100</pubDate>
      
      <guid>https://pwning.systems/posts/an-introduction-to-kernel-exploitation-part1/</guid>
      <description>I&amp;rsquo;m writing this post because I often hear that kernel exploitation is intimidating or difficult to learn. As a result, I&amp;rsquo;ve decided to start a series of basic bugs and exercises to get you started!
Prerequisites
 Knowledge of the Linux command line Knowing how to read and write basic C may be beneficial Being able to debug with the help of a virtual computer or another system Able to install the kernel module compilation build requirements A basic understanding of the difference between userland and kernelland could be helpful Having a basic understanding of assembly can be beneficial for future episodes  For this part, I wrote a simple Linux character device, /dev/shell.</description>
    </item>
    
  </channel>
</rss>